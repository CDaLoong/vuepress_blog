const l=JSON.parse(`{"key":"v-1fe45cf4","path":"/note/js%E4%BB%A3%E7%A0%81%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.html","title":"js代码规范","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1 前言","slug":"_1-前言","link":"#_1-前言","children":[]},{"level":2,"title":"2 代码风格","slug":"_2-代码风格","link":"#_2-代码风格","children":[{"level":3,"title":"2.1 文件","slug":"_2-1-文件","link":"#_2-1-文件","children":[]},{"level":3,"title":"[建议] JavaScript 文件使用无 BOM 的 UTF-8 编码。","slug":"建议-javascript-文件使用无-bom-的-utf-8-编码。","link":"#建议-javascript-文件使用无-bom-的-utf-8-编码。","children":[]},{"level":3,"title":"[建议] 在文件结尾处，保留一个空行。","slug":"建议-在文件结尾处-保留一个空行。","link":"#建议-在文件结尾处-保留一个空行。","children":[]},{"level":3,"title":"2.2 结构","slug":"_2-2-结构","link":"#_2-2-结构","children":[]},{"level":3,"title":"2.2.1 缩进","slug":"_2-2-1-缩进","link":"#_2-2-1-缩进","children":[]},{"level":3,"title":"[强制] 使用 2 个空格做为一个缩进层级，不允许使用 4 个空格。","slug":"强制-使用-2-个空格做为一个缩进层级-不允许使用-4-个空格。","link":"#强制-使用-2-个空格做为一个缩进层级-不允许使用-4-个空格。","children":[]},{"level":3,"title":"[强制] switch 下的 case 和 default 必须增加一个缩进层级。","slug":"强制-switch-下的-case-和-default-必须增加一个缩进层级。","link":"#强制-switch-下的-case-和-default-必须增加一个缩进层级。","children":[]},{"level":3,"title":"2.2.2 空格","slug":"_2-2-2-空格","link":"#_2-2-2-空格","children":[]},{"level":3,"title":"[强制] 二元运算符两侧必须有一个空格，一元运算符与操作对象之间不允许有空格。","slug":"强制-二元运算符两侧必须有一个空格-一元运算符与操作对象之间不允许有空格。","link":"#强制-二元运算符两侧必须有一个空格-一元运算符与操作对象之间不允许有空格。","children":[]},{"level":3,"title":"[强制] 用作代码块起始的左花括号 { 前必须有一个空格。","slug":"强制-用作代码块起始的左花括号-前必须有一个空格。","link":"#强制-用作代码块起始的左花括号-前必须有一个空格。","children":[]},{"level":3,"title":"[强制] if / else / for / while / function / switch / do / try / catch / finally 关键字后，必须有一个空格。","slug":"强制-if-else-for-while-function-switch-do-try-catch-finally-关键字后-必须有一个空格。","link":"#强制-if-else-for-while-function-switch-do-try-catch-finally-关键字后-必须有一个空格。","children":[]},{"level":3,"title":"[强制] 在对象创建时，属性中的 : 之后必须有空格，: 之前不允许有空格。","slug":"强制-在对象创建时-属性中的-之后必须有空格-之前不允许有空格。","link":"#强制-在对象创建时-属性中的-之后必须有空格-之前不允许有空格。","children":[]},{"level":3,"title":"[强制] 函数声明、具名函数表达式、函数调用中，函数名和 ( 之间不允许有空格。","slug":"强制-函数声明、具名函数表达式、函数调用中-函数名和-之间不允许有空格。","link":"#强制-函数声明、具名函数表达式、函数调用中-函数名和-之间不允许有空格。","children":[]},{"level":3,"title":"[强制] , 和 ; 前不允许有空格。如果不位于行尾，, 和 ; 后必须跟一个空格。","slug":"强制-和-前不允许有空格。如果不位于行尾-和-后必须跟一个空格。","link":"#强制-和-前不允许有空格。如果不位于行尾-和-后必须跟一个空格。","children":[]},{"level":3,"title":"[强制] 在函数调用、函数声明、括号表达式、属性访问、if / for / while / switch / catch 等语句中，() 和 [] 内紧贴括号部分不允许有空格。","slug":"强制-在函数调用、函数声明、括号表达式、属性访问、if-for-while-switch-catch-等语句中-和-内紧贴括号部分不允许有空格。","link":"#强制-在函数调用、函数声明、括号表达式、属性访问、if-for-while-switch-catch-等语句中-和-内紧贴括号部分不允许有空格。","children":[]},{"level":3,"title":"[强制] 单行声明的数组与对象，如果包含元素，{} 和 [] 内紧贴括号部分不允许包含空格。","slug":"强制-单行声明的数组与对象-如果包含元素-和-内紧贴括号部分不允许包含空格。","link":"#强制-单行声明的数组与对象-如果包含元素-和-内紧贴括号部分不允许包含空格。","children":[]},{"level":3,"title":"[强制] 行尾不得有多余的空格。","slug":"强制-行尾不得有多余的空格。","link":"#强制-行尾不得有多余的空格。","children":[]},{"level":3,"title":"2.2.3 换行","slug":"_2-2-3-换行","link":"#_2-2-3-换行","children":[]},{"level":3,"title":"[强制] 每个独立语句结束后必须换行。","slug":"强制-每个独立语句结束后必须换行。","link":"#强制-每个独立语句结束后必须换行。","children":[]},{"level":3,"title":"[强制] 每行不得超过 120 个字符。","slug":"强制-每行不得超过-120-个字符。","link":"#强制-每行不得超过-120-个字符。","children":[]},{"level":3,"title":"[强制] 运算符处换行时，运算符必须在新行的行首。","slug":"强制-运算符处换行时-运算符必须在新行的行首。","link":"#强制-运算符处换行时-运算符必须在新行的行首。","children":[]},{"level":3,"title":"[强制] 在函数声明、函数表达式、函数调用、对象创建、数组创建、for 语句等场景中，不允许在 , 或 ; 前换行。","slug":"强制-在函数声明、函数表达式、函数调用、对象创建、数组创建、for-语句等场景中-不允许在-或-前换行。","link":"#强制-在函数声明、函数表达式、函数调用、对象创建、数组创建、for-语句等场景中-不允许在-或-前换行。","children":[]},{"level":3,"title":"[建议] 不同行为或逻辑的语句集，使用空行隔开，更易阅读。","slug":"建议-不同行为或逻辑的语句集-使用空行隔开-更易阅读。","link":"#建议-不同行为或逻辑的语句集-使用空行隔开-更易阅读。","children":[]},{"level":3,"title":"[建议] 在语句的行长度超过 120 时，根据逻辑条件合理缩进。","slug":"建议-在语句的行长度超过-120-时-根据逻辑条件合理缩进。","link":"#建议-在语句的行长度超过-120-时-根据逻辑条件合理缩进。","children":[]},{"level":3,"title":"[建议] 对于 if...else...、try...catch...finally 等语句，推荐使用在 } 号后添加一个换行 的风格，使代码层次结构更清晰，阅读性更好。","slug":"建议-对于-if-else-、try-catch-finally-等语句-推荐使用在-号后添加一个换行-的风格-使代码层次结构更清晰-阅读性更好。","link":"#建议-对于-if-else-、try-catch-finally-等语句-推荐使用在-号后添加一个换行-的风格-使代码层次结构更清晰-阅读性更好。","children":[]},{"level":3,"title":"2.2.4 语句","slug":"_2-2-4-语句","link":"#_2-2-4-语句","children":[]},{"level":3,"title":"[强制] 不得省略语句结束的分号。","slug":"强制-不得省略语句结束的分号。","link":"#强制-不得省略语句结束的分号。","children":[]},{"level":3,"title":"[强制] 在 if / else / for / do / while 语句中，即使只有一行，也不得省略块 {...}。","slug":"强制-在-if-else-for-do-while-语句中-即使只有一行-也不得省略块-。","link":"#强制-在-if-else-for-do-while-语句中-即使只有一行-也不得省略块-。","children":[]},{"level":3,"title":"[强制] 函数定义结束不允许添加分号。","slug":"强制-函数定义结束不允许添加分号。","link":"#强制-函数定义结束不允许添加分号。","children":[]},{"level":3,"title":"[强制] IIFE 必须在函数表达式外添加 (，非 IIFE 不得在函数表达式外添加 (。","slug":"强制-iife-必须在函数表达式外添加-非-iife-不得在函数表达式外添加-。","link":"#强制-iife-必须在函数表达式外添加-非-iife-不得在函数表达式外添加-。","children":[]},{"level":3,"title":"2.3 命名","slug":"_2-3-命名","link":"#_2-3-命名","children":[]},{"level":3,"title":"[强制] 变量 使用 小驼峰命名法。","slug":"强制-变量-使用-小驼峰命名法。","link":"#强制-变量-使用-小驼峰命名法。","children":[]},{"level":3,"title":"[强制] 常量 使用 全部字母大写，单词间下划线分隔 的命名方式。","slug":"强制-常量-使用-全部字母大写-单词间下划线分隔-的命名方式。","link":"#强制-常量-使用-全部字母大写-单词间下划线分隔-的命名方式。","children":[]},{"level":3,"title":"[强制] 函数 使用 小驼峰命名法。","slug":"强制-函数-使用-小驼峰命名法。","link":"#强制-函数-使用-小驼峰命名法。","children":[]},{"level":3,"title":"[强制] 函数的 参数 使用 小驼峰命名法。","slug":"强制-函数的-参数-使用-小驼峰命名法。","link":"#强制-函数的-参数-使用-小驼峰命名法。","children":[]},{"level":3,"title":"[强制] 类 使用 大驼峰命名法。","slug":"强制-类-使用-大驼峰命名法。","link":"#强制-类-使用-大驼峰命名法。","children":[]},{"level":3,"title":"[强制] 类的 方法 / 属性 使用 小驼峰命名法。","slug":"强制-类的-方法-属性-使用-小驼峰命名法。","link":"#强制-类的-方法-属性-使用-小驼峰命名法。","children":[]},{"level":3,"title":"[强制] 枚举变量 使用 大驼峰命名法，枚举的属性 使用 全部字母大写，单词间下划线分隔 的命名方式。","slug":"强制-枚举变量-使用-大驼峰命名法-枚举的属性-使用-全部字母大写-单词间下划线分隔-的命名方式。","link":"#强制-枚举变量-使用-大驼峰命名法-枚举的属性-使用-全部字母大写-单词间下划线分隔-的命名方式。","children":[]},{"level":3,"title":"[强制] 命名空间 使用 小驼峰命名法。","slug":"强制-命名空间-使用-小驼峰命名法。","link":"#强制-命名空间-使用-小驼峰命名法。","children":[]},{"level":3,"title":"[强制] 由多个单词组成的缩写词，在命名中，根据当前命名法和出现的位置，所有字母的大小写与首字母的大小写保持一致。","slug":"强制-由多个单词组成的缩写词-在命名中-根据当前命名法和出现的位置-所有字母的大小写与首字母的大小写保持一致。","link":"#强制-由多个单词组成的缩写词-在命名中-根据当前命名法和出现的位置-所有字母的大小写与首字母的大小写保持一致。","children":[]},{"level":3,"title":"[强制] 类名 使用 名词。","slug":"强制-类名-使用-名词。","link":"#强制-类名-使用-名词。","children":[]},{"level":3,"title":"[建议] 函数名 使用 动宾短语。","slug":"建议-函数名-使用-动宾短语。","link":"#建议-函数名-使用-动宾短语。","children":[]},{"level":3,"title":"[建议] boolean 类型的变量使用 is 或 has 开头。","slug":"建议-boolean-类型的变量使用-is-或-has-开头。","link":"#建议-boolean-类型的变量使用-is-或-has-开头。","children":[]},{"level":3,"title":"[建议] Promise对象 用 动宾短语的进行时 表达。","slug":"建议-promise对象-用-动宾短语的进行时-表达。","link":"#建议-promise对象-用-动宾短语的进行时-表达。","children":[]},{"level":3,"title":"2.4 注释","slug":"_2-4-注释","link":"#_2-4-注释","children":[]},{"level":3,"title":"2.4.1 单行注释","slug":"_2-4-1-单行注释","link":"#_2-4-1-单行注释","children":[]},{"level":3,"title":"[强制] 必须独占一行。// 后跟一个空格，缩进与下一行被注释说明的代码一致。","slug":"强制-必须独占一行。-后跟一个空格-缩进与下一行被注释说明的代码一致。","link":"#强制-必须独占一行。-后跟一个空格-缩进与下一行被注释说明的代码一致。","children":[]},{"level":3,"title":"2.4.2 多行注释","slug":"_2-4-2-多行注释","link":"#_2-4-2-多行注释","children":[]},{"level":3,"title":"[建议] 避免使用 /*...*/ 这样的多行注释。有多行注释内容时，使用多个单行注释。","slug":"建议-避免使用-这样的多行注释。有多行注释内容时-使用多个单行注释。","link":"#建议-避免使用-这样的多行注释。有多行注释内容时-使用多个单行注释。","children":[]},{"level":3,"title":"2.4.3 文档化注释","slug":"_2-4-3-文档化注释","link":"#_2-4-3-文档化注释","children":[]},{"level":3,"title":"[强制] 为了便于代码阅读和自文档化，以下内容必须包含以 /**...*/ 形式的块注释中。","slug":"强制-为了便于代码阅读和自文档化-以下内容必须包含以-形式的块注释中。","link":"#强制-为了便于代码阅读和自文档化-以下内容必须包含以-形式的块注释中。","children":[]},{"level":3,"title":"[强制] 文档注释前必须空一行。","slug":"强制-文档注释前必须空一行。","link":"#强制-文档注释前必须空一行。","children":[]},{"level":3,"title":"[建议] 文档化的文档说明 what，而不是 how。","slug":"建议-文档化的文档说明-what-而不是-how。","link":"#建议-文档化的文档说明-what-而不是-how。","children":[]},{"level":3,"title":"2.4.4 类型定义","slug":"_2-4-4-类型定义","link":"#_2-4-4-类型定义","children":[]},{"level":3,"title":"[强制] 类型定义都是以 { 开始, 以 } 结束。","slug":"强制-类型定义都是以-开始-以-结束。","link":"#强制-类型定义都是以-开始-以-结束。","children":[]},{"level":3,"title":"[强制] 对于基本类型 {string}, {number}, {boolean}，首字母必须小写。","slug":"强制-对于基本类型-string-number-boolean-首字母必须小写。","link":"#强制-对于基本类型-string-number-boolean-首字母必须小写。","children":[]},{"level":3,"title":"2.4.5 文件注释","slug":"_2-4-5-文件注释","link":"#_2-4-5-文件注释","children":[]},{"level":3,"title":"[强制] 文件顶部必须包含文件注释，用 @file 标识文件说明。","slug":"强制-文件顶部必须包含文件注释-用-file-标识文件说明。","link":"#强制-文件顶部必须包含文件注释-用-file-标识文件说明。","children":[]},{"level":3,"title":"[建议] 文件注释中可以用 @author 标识开发者信息。","slug":"建议-文件注释中可以用-author-标识开发者信息。","link":"#建议-文件注释中可以用-author-标识开发者信息。","children":[]},{"level":3,"title":"2.4.6 命名空间注释","slug":"_2-4-6-命名空间注释","link":"#_2-4-6-命名空间注释","children":[]},{"level":3,"title":"[建议] 命名空间使用 @namespace 标识。","slug":"建议-命名空间使用-namespace-标识。","link":"#建议-命名空间使用-namespace-标识。","children":[]},{"level":3,"title":"2.4.7 类注释(es5的类)","slug":"_2-4-7-类注释-es5的类","link":"#_2-4-7-类注释-es5的类","children":[]},{"level":3,"title":"[建议] 使用 @class 标记类或构造函数。","slug":"建议-使用-class-标记类或构造函数。","link":"#建议-使用-class-标记类或构造函数。","children":[]},{"level":3,"title":"[建议] 使用 @extends 标记类的继承信息。","slug":"建议-使用-extends-标记类的继承信息。","link":"#建议-使用-extends-标记类的继承信息。","children":[]},{"level":3,"title":"[强制] 使用包装方式扩展类成员时， 必须通过 @lends 进行重新指向。","slug":"强制-使用包装方式扩展类成员时-必须通过-lends-进行重新指向。","link":"#强制-使用包装方式扩展类成员时-必须通过-lends-进行重新指向。","children":[]},{"level":3,"title":"[强制] 类的属性或方法等成员信息不是 public 的，应使用 @protected 或 @private 标识可访问性。","slug":"强制-类的属性或方法等成员信息不是-public-的-应使用-protected-或-private-标识可访问性。","link":"#强制-类的属性或方法等成员信息不是-public-的-应使用-protected-或-private-标识可访问性。","children":[]},{"level":3,"title":"2.4.8 函数/方法注释","slug":"_2-4-8-函数-方法注释","link":"#_2-4-8-函数-方法注释","children":[]},{"level":3,"title":"[强制] 函数/方法注释必须包含函数说明，有参数和返回值时必须使用注释标识。","slug":"强制-函数-方法注释必须包含函数说明-有参数和返回值时必须使用注释标识。","link":"#强制-函数-方法注释必须包含函数说明-有参数和返回值时必须使用注释标识。","children":[]},{"level":3,"title":"[强制] 参数和返回值注释必须包含类型信息，且不允许省略参数的说明。","slug":"强制-参数和返回值注释必须包含类型信息-且不允许省略参数的说明。","link":"#强制-参数和返回值注释必须包含类型信息-且不允许省略参数的说明。","children":[]},{"level":3,"title":"[建议] 当函数是内部函数，外部不可访问时，可以使用 @inner 标识。","slug":"建议-当函数是内部函数-外部不可访问时-可以使用-inner-标识。","link":"#建议-当函数是内部函数-外部不可访问时-可以使用-inner-标识。","children":[]},{"level":3,"title":"[强制] 对 Object 中各项的描述， 必须使用 @param 标识。","slug":"强制-对-object-中各项的描述-必须使用-param-标识。","link":"#强制-对-object-中各项的描述-必须使用-param-标识。","children":[]},{"level":3,"title":"[建议] 重写父类方法时， 应当添加 @override 标识。如果重写的形参个数、类型、顺序和返回值类型均未发生变化，可省略 @param、@return，仅用 @override 标识，否则仍应作完整注释。","slug":"建议-重写父类方法时-应当添加-override-标识。如果重写的形参个数、类型、顺序和返回值类型均未发生变化-可省略-param、-return-仅用-override-标识-否则仍应作完整注释。","link":"#建议-重写父类方法时-应当添加-override-标识。如果重写的形参个数、类型、顺序和返回值类型均未发生变化-可省略-param、-return-仅用-override-标识-否则仍应作完整注释。","children":[]},{"level":3,"title":"2.4.9 事件注释","slug":"_2-4-9-事件注释","link":"#_2-4-9-事件注释","children":[]},{"level":3,"title":"[强制] 必须使用 @event 标识事件，事件参数的标识与方法描述的参数标识相同。","slug":"强制-必须使用-event-标识事件-事件参数的标识与方法描述的参数标识相同。","link":"#强制-必须使用-event-标识事件-事件参数的标识与方法描述的参数标识相同。","children":[]},{"level":3,"title":"[强制] 在会广播事件的函数前使用 @fires 标识广播的事件，在广播事件代码前使用 @event 标识事件。","slug":"强制-在会广播事件的函数前使用-fires-标识广播的事件-在广播事件代码前使用-event-标识事件。","link":"#强制-在会广播事件的函数前使用-fires-标识广播的事件-在广播事件代码前使用-event-标识事件。","children":[]},{"level":3,"title":"[建议] 对于事件对象的注释，使用 @param 标识，生成文档时可读性更好。","slug":"建议-对于事件对象的注释-使用-param-标识-生成文档时可读性更好。","link":"#建议-对于事件对象的注释-使用-param-标识-生成文档时可读性更好。","children":[]},{"level":3,"title":"2.4.10 常量注释","slug":"_2-4-10-常量注释","link":"#_2-4-10-常量注释","children":[]},{"level":3,"title":"[强制] 常量必须使用 @const 标记，并包含说明和类型信息。","slug":"强制-常量必须使用-const-标记-并包含说明和类型信息。","link":"#强制-常量必须使用-const-标记-并包含说明和类型信息。","children":[]},{"level":3,"title":"2.4.11 复杂类型注释","slug":"_2-4-11-复杂类型注释","link":"#_2-4-11-复杂类型注释","children":[]},{"level":3,"title":"[建议] 对于类型未定义的复杂结构的注释，可以使用 @typedef 标识来定义。","slug":"建议-对于类型未定义的复杂结构的注释-可以使用-typedef-标识来定义。","link":"#建议-对于类型未定义的复杂结构的注释-可以使用-typedef-标识来定义。","children":[]},{"level":3,"title":"2.4.12 细节注释","slug":"_2-4-12-细节注释","link":"#_2-4-12-细节注释","children":[]},{"level":3,"title":"[建议] 细节注释遵循单行注释的格式。说明必须换行时，每行是一个单行注释的起始。","slug":"建议-细节注释遵循单行注释的格式。说明必须换行时-每行是一个单行注释的起始。","link":"#建议-细节注释遵循单行注释的格式。说明必须换行时-每行是一个单行注释的起始。","children":[]},{"level":3,"title":"[强制] 有时我们会使用一些特殊标记进行说明。特殊标记必须使用单行注释的形式。下面列举了一些常用标记：","slug":"强制-有时我们会使用一些特殊标记进行说明。特殊标记必须使用单行注释的形式。下面列举了一些常用标记","link":"#强制-有时我们会使用一些特殊标记进行说明。特殊标记必须使用单行注释的形式。下面列举了一些常用标记","children":[]}]},{"level":2,"title":"3 语言特性","slug":"_3-语言特性","link":"#_3-语言特性","children":[{"level":3,"title":"3.1 变量","slug":"_3-1-变量","link":"#_3-1-变量","children":[]},{"level":3,"title":"[强制] 常量必须使用 const 声明","slug":"强制-常量必须使用-const-声明","link":"#强制-常量必须使用-const-声明","children":[]},{"level":3,"title":"[强制] 非常量变量必须使用 let 声明，当下几乎没有需要使用 var 的场景","slug":"强制-非常量变量必须使用-let-声明-当下几乎没有需要使用-var-的场景","link":"#强制-非常量变量必须使用-let-声明-当下几乎没有需要使用-var-的场景","children":[]},{"level":3,"title":"[强制] 变量、函数在使用前必须先定义。","slug":"强制-变量、函数在使用前必须先定义。","link":"#强制-变量、函数在使用前必须先定义。","children":[]},{"level":3,"title":"[强制] 每个 var const let 只能声明一个变量。","slug":"强制-每个-var-const-let-只能声明一个变量。","link":"#强制-每个-var-const-let-只能声明一个变量。","children":[]},{"level":3,"title":"[强制] 变量必须 即用即声明，不得在函数或其它形式的代码块起始位置统一声明所有变量。","slug":"强制-变量必须-即用即声明-不得在函数或其它形式的代码块起始位置统一声明所有变量。","link":"#强制-变量必须-即用即声明-不得在函数或其它形式的代码块起始位置统一声明所有变量。","children":[]},{"level":3,"title":"3.2 条件","slug":"_3-2-条件","link":"#_3-2-条件","children":[]},{"level":3,"title":"[强制] 在 Equality Expression 中使用类型严格的 ===。仅当判断 null 或 undefined 时，允许使用 == null。","slug":"强制-在-equality-expression-中使用类型严格的-。仅当判断-null-或-undefined-时-允许使用-null。","link":"#强制-在-equality-expression-中使用类型严格的-。仅当判断-null-或-undefined-时-允许使用-null。","children":[]},{"level":3,"title":"[建议] 尽可能使用简洁的表达式。","slug":"建议-尽可能使用简洁的表达式。","link":"#建议-尽可能使用简洁的表达式。","children":[]},{"level":3,"title":"[建议] 按执行频率排列分支的顺序。","slug":"建议-按执行频率排列分支的顺序。","link":"#建议-按执行频率排列分支的顺序。","children":[]},{"level":3,"title":"[建议] 对于相同变量或表达式的多值条件，用 switch 代替 if。","slug":"建议-对于相同变量或表达式的多值条件-用-switch-代替-if。","link":"#建议-对于相同变量或表达式的多值条件-用-switch-代替-if。","children":[]},{"level":3,"title":"[建议] 如果函数或全局中的 else 块后没有任何语句，可以删除 else。","slug":"建议-如果函数或全局中的-else-块后没有任何语句-可以删除-else。","link":"#建议-如果函数或全局中的-else-块后没有任何语句-可以删除-else。","children":[]},{"level":3,"title":"3.3 循环","slug":"_3-3-循环","link":"#_3-3-循环","children":[]},{"level":3,"title":"[建议] 不要在循环体中包含函数表达式，事先将函数提取到循环体外。","slug":"建议-不要在循环体中包含函数表达式-事先将函数提取到循环体外。","link":"#建议-不要在循环体中包含函数表达式-事先将函数提取到循环体外。","children":[]},{"level":3,"title":"[建议] 对循环内多次使用的不变值，在循环外用变量缓存。","slug":"建议-对循环内多次使用的不变值-在循环外用变量缓存。","link":"#建议-对循环内多次使用的不变值-在循环外用变量缓存。","children":[]},{"level":3,"title":"[建议] 对有序集合进行遍历时，缓存 length。","slug":"建议-对有序集合进行遍历时-缓存-length。","link":"#建议-对有序集合进行遍历时-缓存-length。","children":[]},{"level":3,"title":"[建议] 对有序集合进行顺序无关的遍历时，使用逆序遍历。","slug":"建议-对有序集合进行顺序无关的遍历时-使用逆序遍历。","link":"#建议-对有序集合进行顺序无关的遍历时-使用逆序遍历。","children":[]},{"level":3,"title":"3.4 类型","slug":"_3-4-类型","link":"#_3-4-类型","children":[]},{"level":3,"title":"3.4.1 类型检测","slug":"_3-4-1-类型检测","link":"#_3-4-1-类型检测","children":[]},{"level":3,"title":"[建议] 类型检测优先使用 typeof。对象类型检测使用 instanceof。null 或 undefined 的检测使用 == null。","slug":"建议-类型检测优先使用-typeof。对象类型检测使用-instanceof。null-或-undefined-的检测使用-null。","link":"#建议-类型检测优先使用-typeof。对象类型检测使用-instanceof。null-或-undefined-的检测使用-null。","children":[]},{"level":3,"title":"3.4.2 类型转换","slug":"_3-4-2-类型转换","link":"#_3-4-2-类型转换","children":[]},{"level":3,"title":"[建议] 转换成 string 时，使用 + ''。","slug":"建议-转换成-string-时-使用-。","link":"#建议-转换成-string-时-使用-。","children":[]},{"level":3,"title":"[建议] 转换成 number 时，通常使用 +。","slug":"建议-转换成-number-时-通常使用-。","link":"#建议-转换成-number-时-通常使用-。","children":[]},{"level":3,"title":"[建议] string 转换成 number，要转换的字符串结尾包含非数字并期望忽略时，使用 parseInt。","slug":"建议-string-转换成-number-要转换的字符串结尾包含非数字并期望忽略时-使用-parseint。","link":"#建议-string-转换成-number-要转换的字符串结尾包含非数字并期望忽略时-使用-parseint。","children":[]},{"level":3,"title":"[强制] 使用 parseInt 时，必须指定进制。","slug":"强制-使用-parseint-时-必须指定进制。","link":"#强制-使用-parseint-时-必须指定进制。","children":[]},{"level":3,"title":"[建议] 转换成 boolean 时，使用 !!。","slug":"建议-转换成-boolean-时-使用-。","link":"#建议-转换成-boolean-时-使用-。","children":[]},{"level":3,"title":"[建议] number 去除小数点，使用 Math.floor / Math.round / Math.ceil，不使用 parseInt。","slug":"建议-number-去除小数点-使用-math-floor-math-round-math-ceil-不使用-parseint。","link":"#建议-number-去除小数点-使用-math-floor-math-round-math-ceil-不使用-parseint。","children":[]},{"level":3,"title":"3.5 字符串","slug":"_3-5-字符串","link":"#_3-5-字符串","children":[]},{"level":3,"title":"[强制] 字符串开头和结束使用单引号 '。","slug":"强制-字符串开头和结束使用单引号-。","link":"#强制-字符串开头和结束使用单引号-。","children":[]},{"level":3,"title":"[建议] 使用 数组 或 + 拼接字符串。","slug":"建议-使用-数组-或-拼接字符串。","link":"#建议-使用-数组-或-拼接字符串。","children":[]},{"level":3,"title":"[建议] 使用字符串拼接的方式生成HTML，需要根据语境进行合理的转义。","slug":"建议-使用字符串拼接的方式生成html-需要根据语境进行合理的转义。","link":"#建议-使用字符串拼接的方式生成html-需要根据语境进行合理的转义。","children":[]},{"level":3,"title":"[建议] 复杂的数据到视图字符串的转换过程，选用一种模板引擎。","slug":"建议-复杂的数据到视图字符串的转换过程-选用一种模板引擎。","link":"#建议-复杂的数据到视图字符串的转换过程-选用一种模板引擎。","children":[]},{"level":3,"title":"3.6 对象","slug":"_3-6-对象","link":"#_3-6-对象","children":[]},{"level":3,"title":"[强制] 使用对象字面量 {} 创建新 Object。","slug":"强制-使用对象字面量-创建新-object。","link":"#强制-使用对象字面量-创建新-object。","children":[]},{"level":3,"title":"[建议] 对象创建时，如果一个对象的所有 属性 均可以不添加引号，建议所有 属性 不添加引号。","slug":"建议-对象创建时-如果一个对象的所有-属性-均可以不添加引号-建议所有-属性-不添加引号。","link":"#建议-对象创建时-如果一个对象的所有-属性-均可以不添加引号-建议所有-属性-不添加引号。","children":[]},{"level":3,"title":"[建议] 对象创建时，如果任何一个 属性 需要添加引号，则所有 属性 建议添加 '。","slug":"建议-对象创建时-如果任何一个-属性-需要添加引号-则所有-属性-建议添加-。","link":"#建议-对象创建时-如果任何一个-属性-需要添加引号-则所有-属性-建议添加-。","children":[]},{"level":3,"title":"[强制] 不允许修改和扩展任何原生对象和宿主对象的原型。","slug":"强制-不允许修改和扩展任何原生对象和宿主对象的原型。","link":"#强制-不允许修改和扩展任何原生对象和宿主对象的原型。","children":[]},{"level":3,"title":"[建议] 属性访问时，尽量使用 .。","slug":"建议-属性访问时-尽量使用-。","link":"#建议-属性访问时-尽量使用-。","children":[]},{"level":3,"title":"[建议] for in 遍历对象时, 使用 hasOwnProperty 过滤掉原型中的属性。","slug":"建议-for-in-遍历对象时-使用-hasownproperty-过滤掉原型中的属性。","link":"#建议-for-in-遍历对象时-使用-hasownproperty-过滤掉原型中的属性。","children":[]},{"level":3,"title":"3.7 数组","slug":"_3-7-数组","link":"#_3-7-数组","children":[]},{"level":3,"title":"[强制] 使用数组字面量 [] 创建新数组，除非想要创建的是指定长度的数组。","slug":"强制-使用数组字面量-创建新数组-除非想要创建的是指定长度的数组。","link":"#强制-使用数组字面量-创建新数组-除非想要创建的是指定长度的数组。","children":[]},{"level":3,"title":"[强制] 遍历数组不使用 for in。","slug":"强制-遍历数组不使用-for-in。","link":"#强制-遍历数组不使用-for-in。","children":[]},{"level":3,"title":"[建议] 不因为性能的原因自己实现数组排序功能，尽量使用数组的 sort 方法。","slug":"建议-不因为性能的原因自己实现数组排序功能-尽量使用数组的-sort-方法。","link":"#建议-不因为性能的原因自己实现数组排序功能-尽量使用数组的-sort-方法。","children":[]},{"level":3,"title":"[建议] 清空数组使用 .length = 0。","slug":"建议-清空数组使用-length-0。","link":"#建议-清空数组使用-length-0。","children":[]},{"level":3,"title":"3.8 函数","slug":"_3-8-函数","link":"#_3-8-函数","children":[]},{"level":3,"title":"3.8.1 函数长度","slug":"_3-8-1-函数长度","link":"#_3-8-1-函数长度","children":[]},{"level":3,"title":"[建议] 一个函数的长度控制在 50 行以内。","slug":"建议-一个函数的长度控制在-50-行以内。","link":"#建议-一个函数的长度控制在-50-行以内。","children":[]},{"level":3,"title":"3.8.2 参数设计","slug":"_3-8-2-参数设计","link":"#_3-8-2-参数设计","children":[]},{"level":3,"title":"[建议] 一个函数的参数控制在 6 个以内。","slug":"建议-一个函数的参数控制在-6-个以内。","link":"#建议-一个函数的参数控制在-6-个以内。","children":[]},{"level":3,"title":"[建议] 通过 options 参数传递非数据输入型参数。","slug":"建议-通过-options-参数传递非数据输入型参数。","link":"#建议-通过-options-参数传递非数据输入型参数。","children":[]},{"level":3,"title":"3.8.3 闭包","slug":"_3-8-3-闭包","link":"#_3-8-3-闭包","children":[]},{"level":3,"title":"[建议] 在适当的时候将闭包内大对象置为 null。","slug":"建议-在适当的时候将闭包内大对象置为-null。","link":"#建议-在适当的时候将闭包内大对象置为-null。","children":[]},{"level":3,"title":"3.8.4 空函数","slug":"_3-8-4-空函数","link":"#_3-8-4-空函数","children":[]},{"level":3,"title":"[建议] 空函数不使用 new Function() 的形式。","slug":"建议-空函数不使用-new-function-的形式。","link":"#建议-空函数不使用-new-function-的形式。","children":[]},{"level":3,"title":"[建议] 对于性能有高要求的场合，建议存在一个空函数的常量，供多处使用共享。","slug":"建议-对于性能有高要求的场合-建议存在一个空函数的常量-供多处使用共享。","link":"#建议-对于性能有高要求的场合-建议存在一个空函数的常量-供多处使用共享。","children":[]},{"level":3,"title":"3.9 面向对象","slug":"_3-9-面向对象","link":"#_3-9-面向对象","children":[]},{"level":3,"title":"[强制] 类的继承方案，实现时需要修正 constructor。","slug":"强制-类的继承方案-实现时需要修正-constructor。","link":"#强制-类的继承方案-实现时需要修正-constructor。","children":[]},{"level":3,"title":"[建议] 声明类时，保证 constructor 的正确性。","slug":"建议-声明类时-保证-constructor-的正确性。","link":"#建议-声明类时-保证-constructor-的正确性。","children":[]},{"level":3,"title":"[建议] 属性在构造函数中声明，方法在原型中声明。","slug":"建议-属性在构造函数中声明-方法在原型中声明。","link":"#建议-属性在构造函数中声明-方法在原型中声明。","children":[]},{"level":3,"title":"[强制] 自定义事件的 事件名 必须全小写。","slug":"强制-自定义事件的-事件名-必须全小写。","link":"#强制-自定义事件的-事件名-必须全小写。","children":[]},{"level":3,"title":"[强制] 自定义事件只能有一个 event 参数。如果事件需要传递较多信息，应仔细设计事件对象。","slug":"强制-自定义事件只能有一个-event-参数。如果事件需要传递较多信息-应仔细设计事件对象。","link":"#强制-自定义事件只能有一个-event-参数。如果事件需要传递较多信息-应仔细设计事件对象。","children":[]},{"level":3,"title":"[建议] 设计自定义事件时，应考虑禁止默认行为。","slug":"建议-设计自定义事件时-应考虑禁止默认行为。","link":"#建议-设计自定义事件时-应考虑禁止默认行为。","children":[]},{"level":3,"title":"3.10 动态特性","slug":"_3-10-动态特性","link":"#_3-10-动态特性","children":[]},{"level":3,"title":"3.10.1 eval","slug":"_3-10-1-eval","link":"#_3-10-1-eval","children":[]},{"level":3,"title":"[强制] 避免使用直接 eval 函数。","slug":"强制-避免使用直接-eval-函数。","link":"#强制-避免使用直接-eval-函数。","children":[]},{"level":3,"title":"[建议] 尽量避免使用 eval 函数。","slug":"建议-尽量避免使用-eval-函数。","link":"#建议-尽量避免使用-eval-函数。","children":[]},{"level":3,"title":"3.10.2 动态执行代码","slug":"_3-10-2-动态执行代码","link":"#_3-10-2-动态执行代码","children":[]},{"level":3,"title":"[建议] 使用 new Function 执行动态代码。","slug":"建议-使用-new-function-执行动态代码。","link":"#建议-使用-new-function-执行动态代码。","children":[]},{"level":3,"title":"3.10.3 with","slug":"_3-10-3-with","link":"#_3-10-3-with","children":[]},{"level":3,"title":"[建议] 尽量不要使用 with。","slug":"建议-尽量不要使用-with。","link":"#建议-尽量不要使用-with。","children":[]},{"level":3,"title":"3.10.4 delete","slug":"_3-10-4-delete","link":"#_3-10-4-delete","children":[]},{"level":3,"title":"[建议] 减少 delete 的使用。","slug":"建议-减少-delete-的使用。","link":"#建议-减少-delete-的使用。","children":[]},{"level":3,"title":"[建议] 处理 delete 可能产生的异常。","slug":"建议-处理-delete-可能产生的异常。","link":"#建议-处理-delete-可能产生的异常。","children":[]},{"level":3,"title":"3.10.5 对象属性","slug":"_3-10-5-对象属性","link":"#_3-10-5-对象属性","children":[]},{"level":3,"title":"[建议] 避免修改外部传入的对象。","slug":"建议-避免修改外部传入的对象。","link":"#建议-避免修改外部传入的对象。","children":[]},{"level":3,"title":"[建议] 具备强类型的设计。","slug":"建议-具备强类型的设计。","link":"#建议-具备强类型的设计。","children":[]}]},{"level":2,"title":"4 浏览器环境","slug":"_4-浏览器环境","link":"#_4-浏览器环境","children":[{"level":3,"title":"4.1 DOM","slug":"_4-1-dom","link":"#_4-1-dom","children":[]},{"level":3,"title":"4.1.1 元素获取","slug":"_4-1-1-元素获取","link":"#_4-1-1-元素获取","children":[]},{"level":3,"title":"[建议] 对于单个元素，尽可能使用 document.getElementById 获取，避免使用document.all。","slug":"建议-对于单个元素-尽可能使用-document-getelementbyid-获取-避免使用document-all。","link":"#建议-对于单个元素-尽可能使用-document-getelementbyid-获取-避免使用document-all。","children":[]},{"level":3,"title":"[建议] 对于多个元素的集合，尽可能使用 context.getElementsByTagName 获取。其中 context 可以为 document 或其他元素。指定 tagName 参数为 \`\` 可以获得所有子元素。","slug":"建议-对于多个元素的集合-尽可能使用-context-getelementsbytagname-获取。其中-context-可以为-document-或其他元素。指定-tagname-参数为-可以获得所有子元素。","link":"#建议-对于多个元素的集合-尽可能使用-context-getelementsbytagname-获取。其中-context-可以为-document-或其他元素。指定-tagname-参数为-可以获得所有子元素。","children":[]},{"level":3,"title":"[建议] 遍历元素集合时，尽量缓存集合长度。如需多次操作同一集合，则应将集合转为数组。","slug":"建议-遍历元素集合时-尽量缓存集合长度。如需多次操作同一集合-则应将集合转为数组。","link":"#建议-遍历元素集合时-尽量缓存集合长度。如需多次操作同一集合-则应将集合转为数组。","children":[]},{"level":3,"title":"[建议] 获取元素的直接子元素时使用 children。避免使用childNodes，除非预期是需要包含文本、注释和属性类型的节点。","slug":"建议-获取元素的直接子元素时使用-children。避免使用childnodes-除非预期是需要包含文本、注释和属性类型的节点。","link":"#建议-获取元素的直接子元素时使用-children。避免使用childnodes-除非预期是需要包含文本、注释和属性类型的节点。","children":[]},{"level":3,"title":"4.1.2 样式获取","slug":"_4-1-2-样式获取","link":"#_4-1-2-样式获取","children":[]},{"level":3,"title":"[建议] 获取元素实际样式信息时，应使用 getComputedStyle 或 currentStyle。","slug":"建议-获取元素实际样式信息时-应使用-getcomputedstyle-或-currentstyle。","link":"#建议-获取元素实际样式信息时-应使用-getcomputedstyle-或-currentstyle。","children":[]},{"level":3,"title":"4.1.3 样式设置","slug":"_4-1-3-样式设置","link":"#_4-1-3-样式设置","children":[]},{"level":3,"title":"[建议] 尽可能通过为元素添加预定义的 className 来改变元素样式，避免直接操作 style 设置。","slug":"建议-尽可能通过为元素添加预定义的-classname-来改变元素样式-避免直接操作-style-设置。","link":"#建议-尽可能通过为元素添加预定义的-classname-来改变元素样式-避免直接操作-style-设置。","children":[]},{"level":3,"title":"[强制] 通过 style 对象设置元素样式时，对于带单位非 0 值的属性，不允许省略单位。","slug":"强制-通过-style-对象设置元素样式时-对于带单位非-0-值的属性-不允许省略单位。","link":"#强制-通过-style-对象设置元素样式时-对于带单位非-0-值的属性-不允许省略单位。","children":[]},{"level":3,"title":"4.1.4 DOM 操作","slug":"_4-1-4-dom-操作","link":"#_4-1-4-dom-操作","children":[]},{"level":3,"title":"[建议] 操作 DOM 时，尽量减少页面 reflow。","slug":"建议-操作-dom-时-尽量减少页面-reflow。","link":"#建议-操作-dom-时-尽量减少页面-reflow。","children":[]},{"level":3,"title":"[建议] 尽量减少 DOM 操作。","slug":"建议-尽量减少-dom-操作。","link":"#建议-尽量减少-dom-操作。","children":[]},{"level":3,"title":"4.1.5 DOM 事件","slug":"_4-1-5-dom-事件","link":"#_4-1-5-dom-事件","children":[]},{"level":3,"title":"[建议] 优先使用 addEventListener / attachEvent 绑定事件，避免直接在 HTML 属性中或 DOM 的 expando 属性绑定事件处理。","slug":"建议-优先使用-addeventlistener-attachevent-绑定事件-避免直接在-html-属性中或-dom-的-expando-属性绑定事件处理。","link":"#建议-优先使用-addeventlistener-attachevent-绑定事件-避免直接在-html-属性中或-dom-的-expando-属性绑定事件处理。","children":[]},{"level":3,"title":"[建议] 使用 addEventListener 时第三个参数使用 false。","slug":"建议-使用-addeventlistener-时第三个参数使用-false。","link":"#建议-使用-addeventlistener-时第三个参数使用-false。","children":[]},{"level":3,"title":"[建议] 在没有事件自动管理的框架支持下，应持有监听器函数的引用，在适当时候（元素释放、页面卸载等）移除添加的监听器。","slug":"建议-在没有事件自动管理的框架支持下-应持有监听器函数的引用-在适当时候-元素释放、页面卸载等-移除添加的监听器。","link":"#建议-在没有事件自动管理的框架支持下-应持有监听器函数的引用-在适当时候-元素释放、页面卸载等-移除添加的监听器。","children":[]}]}],"git":{"updatedTime":1686646481000,"contributors":[{"name":"chenleilong","email":"chenleilong@51yund.com","commits":1}]},"filePathRelative":"note/js代码开发规范.md"}`);export{l as data};
